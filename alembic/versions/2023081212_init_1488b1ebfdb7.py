"""init

Revision ID: 1488b1ebfdb7
Revises:
Create Date: 2023-08-12 02:12:41.219159

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "1488b1ebfdb7"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(length=128), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "quizzes",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("published", sa.Boolean(), nullable=True),
        sa.Column("deleted", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_quizzes_deleted"), "quizzes", ["deleted"], unique=False)
    op.create_table(
        "games",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("finished", sa.Boolean(), nullable=True),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("offset", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("quiz_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["quiz_id"],
            ["quizzes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "questions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("quiz_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["quiz_id"],
            ["quizzes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "answers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("is_correct", sa.Boolean(), nullable=True),
        sa.Column("question_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "game_questions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("answered", sa.Boolean(), nullable=True),
        sa.Column("skipped", sa.Boolean(), nullable=True),
        sa.Column("answer_score", sa.Float(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("question_id", sa.UUID(), nullable=True),
        sa.Column("game_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_game_questions_question_id"),
        "game_questions",
        ["question_id"],
        unique=False,
    )
    op.create_table(
        "game_answers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("choice", sa.String(), nullable=True),
        sa.Column("game_question_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_question_id"],
            ["game_questions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("game_answers")
    op.drop_index(op.f("ix_game_questions_question_id"), table_name="game_questions")
    op.drop_table("game_questions")
    op.drop_table("answers")
    op.drop_table("questions")
    op.drop_table("games")
    op.drop_index(op.f("ix_quizzes_deleted"), table_name="quizzes")
    op.drop_table("quizzes")
    op.drop_table("users")
    # ### end Alembic commands ###
